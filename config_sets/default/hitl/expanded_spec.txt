EXPANDED SPECIFICATION - Academic Course Management System

This is a deterministic clarification provided to all frameworks to ensure reproducible results.

TECHNOLOGY STACK (MANDATORY):
- Backend: Python 3.11+ with FastAPI framework
- Database: SQLite with SQLAlchemy ORM
- API Style: RESTful with JSON responses
- Frontend: HTML/CSS/JavaScript (vanilla or framework of your choice)

DATA MODEL DETAILS:
- Student: {id: int, name: str, email: str (unique), enrollment_date: date}
- Course: {id: int, code: str (unique), title: str, credits: int, teacher_id: int (nullable FK)}
- Teacher: {id: int, name: str, email: str (unique), department: str}
- Enrollment: {id: int, student_id: int (FK), course_id: int (FK), enrollment_date: date, grade: str (nullable)}

VALIDATION RULES:
- Emails must match format: [local]@[domain].[tld]
- Names: 1-100 characters, non-empty
- Course codes: 3-10 alphanumeric characters
- Credits: 1-12 integer
- Grades: One of ['A', 'B', 'C', 'D', 'F'] or null
- Departments: 1-50 characters

API ENDPOINTS STRUCTURE:
- Students: GET/POST /students, GET/PATCH/DELETE /students/{id}
- Courses: GET/POST /courses, GET/PATCH/DELETE /courses/{id}
- Teachers: GET/POST /teachers, GET/PATCH/DELETE /teachers/{id}
- Enrollments: POST /enrollments, GET/PATCH/DELETE /enrollments/{id}
- Relationships: GET /students/{id}/enrollments, GET /courses/{id}/students, GET /teachers/{id}/courses
- Operations: PATCH /courses/{id}/assign-teacher, PATCH /courses/{id}/unassign-teacher

PAGINATION:
- Parameters: page (default 1), page_size (default 20, max 100)
- Response includes: {data: [...], total_count: int, total_pages: int, current_page: int, page_size: int}

ERROR RESPONSES:
- 400: Validation errors with field details
- 404: Resource not found
- 409: Unique constraint violation (duplicate email/code)
- 422: Invalid data type
- 500: Server error

UI REQUIREMENTS:
- Homepage with navigation
- Separate pages for Students, Courses, Teachers, Enrollments
- Each page: List view with pagination, Add/Edit forms, Delete confirmation
- Display validation errors from API
- Accessible at /students, /courses, /teachers, /enrollments URLs

DATABASE:
- Auto-create tables on startup
- Migrations must preserve existing data
- Enforce foreign key constraints
- Prevent duplicate enrollments

This specification is fixed and identical across all experiment runs to ensure reproducibility.
